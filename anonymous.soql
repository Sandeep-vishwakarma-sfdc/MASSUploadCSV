String sObjectTypeApi = 'Price_Block_Margin_Matrix__c';
Schema.SObjectType t = Schema.getGlobalDescribe().get(sObjectTypeApi);
SObject obj= t.newSObject();
Profit_Center__c pc = new Profit_Center__c();
String profitCeneterCombinationKey = '5100LA0005';
pc.Combination_Key__c = profitCeneterCombinationKey;
obj.putSObject('Profit_Center__r', pc);    


String sObjectTypeApi = 'Price_Block_Margin_Matrix__c';
Schema.SObjectType t = Schema.getGlobalDescribe().get(sObjectTypeApi);
Map<String,Schema.SObjectType> describe=  Schema.getGlobalDescribe();
Map<String,Schema.SObjectField> objectField=  describe.get(sObjectTypeApi).getDescribe().fields.getMap();  
System.debug('Mappping Field'+objectField);
for(Schema.SObjectField fields:objectField.values()){
    System.debug('Fields Schema '+fields);
}


SObjectField lookup = Contact.AccountId, external = Account.Counsyl_Id__c;
SObjectType childType = Contact.sObjectType, parentType = Account.sObjectType;
String relationshipName = lookup.getDescribe().getRelationshipName();
Map<SObjectField, Object> requiredFields = new Map<SObjectField, Object>
{
    Contact.LastName => 'Doe'
};

SObject parent = parentType.newSObject();
parent.put(external, '12345');

SObject child = childType.newSObject();
child.putSObject(relationshipName, parent);
for (SObjectField field : requiredFields.keySet())
    child.put(field, requiredFields.get(field));
insert child;

List<String> dummyString = new List<String>();
dummyString.add('Profit_Center__r');
dummyString.add('Sales_Org__r');
dummyString.add('SKU_Code__r');
dummyString.add('UOM__c');
dummyString.add('Start_Date__c');
dummyString.add(null);

System.debug(dummyString.indexOf(null));


List<String> FileNames = ConnectToSharePoint.readFilesName('folder1');

//https://upllimited.sharepoint.com/sites/spdevelopment/_api/web/GetFileByServerRelativeUrl('/sites/spdevelopment/PLNMarginData/folder1/CSV test 1.csv')/$value


-------------------------------------------------------------------------------------------
String folderName = 'folder1';
List<String> fileNames = new List<String>();
fileNames = ConnectToSharePoint.readFilesName(folderName);
for(string name:fileNames){
    System.debug('Name '+name);
}

-------------------------------------------------------------------------------------------
SharePointDetails__c sharepointDetail = ConnectToSharePoint.getSharePointdetails();
String appendFolder = sharepointDetail.Get_CSV_File_URL__c + folderName+'/'+fileName+'\')'+'/$value';
System.debug('appendFolder '+appendFolder);

String fileName = 'file4.csv';
String folderName = 'folder1';
BatchGetCSVContent bacth = new BatchGetCSVContent(folderName);
bacth.csvContent(folderName,fileName);
-----------------------------------------------------------------------------------------------

String filname = 'file3.xlsx';
String folderName = 'folder1'; // TODO : Dynamic folder i.e refrence folderName from this.
BatchGetCSVContent batch = new BatchGetCSVContent(folderName);
String csvBody = batch.csvContent(folderName,filname);
Blob content = Blob.valueOf(csvBody);
Mass_Upload_CSV__c massupload = batch.createMassUpload('SalesDeduction'); //TODO: Dyanamic Type from fileName
batch.createFiles(massupload,content);

------------------------------------------------------------------------------------------

Name file3.xlsx
Name 8000_20220909063545_1.csv
Name 8mb.csv
Name file4.csv
Name file2.csv
Name CPI_Test.csv
Name CSV test 1.csv
Name 1.png
Name file1.csv



DateTime startDateTime = DateTime.now();
Date endToday = Date.today().addDays(30);
Time t1 = startDateTime.time();
DateTime endDateTime = DateTime.newInstance(endToday,t1);
String startDateEndDate = startDateTime.format('DDMMYYYY')+';'+endDateTime.format('DDMMYYYY');
System.debug('startDateEndDate '+startDateEndDate);

String todayString = String.valueOf(Date.today().day()).leftPad(2, '0') + 
                     String.valueOf(Date.today().month()).leftPad(2, '0') + 
                     String.valueOf(Date.today().year());
System.debug('todayString '+todayString);


String todayString = String.valueOf(Date.today().day()).leftPad(2, '0') + 
                     String.valueOf(Date.today().month()).leftPad(2, '0') + 
                     String.valueOf(Date.today().year());


// Get the current date
Date currentDate = Date.today();

// Add 30 days to the current date
Date next30thDay = currentDate.addDays(30);

// Format the next 30th day as a string in the "DDMMYYYY" format
String next30thDayString = String.valueOf(next30thDay.day()).leftPad(2, '0') + 
                           String.valueOf(next30thDay.month()).leftPad(2, '0') + 
                           String.valueOf(next30thDay.year());

system.debug('next30thDayString '+next30thDayString);



SharepointSchedular sp = new SharepointSchedular('folder1');
sp.run();

System.schedule('SharepointSchedular', '0 20 12 * * ?', new SharepointSchedular('May_23'));